name: CI Pipeline

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  python_check:
    runs-on: ubuntu-latest
    steps:
    - name: Check Repository
      uses: actions/checkout@v3

    - name: Lint Python
      uses: cclauss/Find-Python-syntax-errors-action@master
      
  docker_build_push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build/Tag and Push Docker Image to AWS ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: pichincha-challenge
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: List ECR Images
      run: aws ecr describe-images --repository-name pichincha-challenge | jq '.imageDetails | sort_by(.imagePushedAt)'
                
  terraform_build:
    runs-on: ubuntu-latest
    steps:
    - name: Check Repository
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.5

    - name: Terraform Format
      id: fmt
      run: terraform fmt

    - name: Init Terraform
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate 
  
    - name: Terraform Plan
      id: plan
      run: terraform plan

  release_build:
    runs-on: ubuntu-latest
    needs: docker_build_push terraform_build
    steps:
    - uses: actions/checkout@v3

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
      run: npx semantic-release