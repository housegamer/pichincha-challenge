name: CI Pipeline

on:
  push:
    branches: develop

env:
  API_KEY: ${{ secrets.API_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  terraform_build:
    runs-on: ubuntu-latest
    steps:
    - name: Check Repository
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.5

    - name: Terraform Format
      id: fmt
      run: terraform fmt

    - name: Init Terraform
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate 
  
    - name: Terraform Plan
      id: plan
      run: terraform plan

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve -target=aws_ecr_repository.Pichincha_Challenge

  docker_build_push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::446427957983:role/aws-service-role/replication.ecr.amazonaws.com/AWSServiceRoleForECRReplication
        aws-region: us-east-1 
    
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build/Tag and Push Docker Image to AWS ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: pichincha-challenge
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG